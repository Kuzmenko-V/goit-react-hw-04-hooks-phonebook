{"version":3,"sources":["Components/Section.js","Components/Form/Form.js","Components/Filter/Filter.js","Components/ContactList/ContactList.js","App.js","index.js"],"names":["Section","title","children","defaultProps","Form","onSubmit","useState","name","setName","number","setNomber","inputChange","e","currentTarget","value","className","preventDefault","type","pattern","required","onChange","Filter","filter","ContactList","contacts","onDeleteContact","map","contact","onClick","id","App","JSON","parse","localStorage","getItem","setContacts","setFilter","useEffect","setItem","stringify","temp","shortid","generate","length","prevState","alert","toLowerCase","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bc2b2eaf.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => (\r\n    <div>\r\n        {title && <h2>{title}</h2>}\r\n        {children}\r\n    </div>\r\n);\r\n\r\nSection.defaultProps = {\r\n    title: \"\",\r\n    children: [],\r\n};\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string,\r\n    children: PropTypes.node,\r\n};\r\n\r\nexport default Section;","import  { useState } from 'react';\r\nimport './Form.css';\r\n\r\nexport default function Form({ onSubmit }) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNomber] = useState('');\r\n  const inputChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    switch (name) {\r\n      case 'name': setName(value); break;\r\n      case 'number': setNomber(value); break;\r\n      default: return;\r\n    }\r\n  };\r\n  const formSabmit = e => {\r\n    e.preventDefault();\r\n    onSubmit({ name: name, number: number });\r\n    setNomber('');\r\n    setName('');\r\n  }\r\n  return (\r\n            <form  className=\"form\"onSubmit={formSabmit}>\r\n             <label >\r\n               Имя\r\n               <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                required\r\n                value={name}\r\n                onChange={inputChange}\r\n               />\r\n                </label>\r\n             <label >\r\n               Номер телефона\r\n               <input\r\n                type=\"tel\"\r\n                name=\"number\"\r\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                required\r\n                value={number}\r\n                onChange={inputChange}\r\n               />\r\n             </label>\r\n             <button title=\"submit\">Добавить контакт</button>\r\n            </form>\r\n        );\r\n};\r\n  ","import \"./Filter.css\";\r\nexport default function Filter({ filter, inputChange }) {\r\n    return (\r\n        <label className=\"Filter\">\r\n        Поиск контакта по имени\r\n        <input\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n        value={filter}\r\n        onChange={inputChange}\r\n        />\r\n        </label>\r\n    );\r\n};\r\n    \r\n\r\n","import './ContactList.css';\r\n\r\nexport default function ContactList({ contacts, onDeleteContact }) {\r\n   return (\r\n   <ul className=\"ContactList\">\r\n      {contacts.map(contact =>\r\n         <li key={contact.id} >\r\n            <p>{contact.name}: {contact.number}</p>\r\n            <button onClick={()=>onDeleteContact(contact.id)}>Удалить</button>\r\n         </li>\r\n      )}\r\n   </ul> \r\n);\r\n}\r\n","import {useState, useEffect} from 'react';\nimport './App.css';\nimport Section from './Components/Section';\nimport Form from './Components/Form';\nimport Filter from './Components/Filter';\nimport ContactList from './Components/ContactList';\nimport shortid from 'shortid'\n\nexport default function App() {\n  const [contacts, setContacts] = useState(() => { return (JSON.parse(localStorage.getItem('contacts')) ?? [])});\n  const [filter, setFilter] = useState('');\n\n  const formSabmitData = ({ name, number }) => {\n    const temp = {\n      id: `id-${shortid.generate()}`,\n      name,\n      number\n    };\n    if (contacts.filter(e => e.name === temp.name).length === 0) {\n      setContacts(prevState => ([...prevState , temp]));\n    }\n    else {\n      alert(`${name} уже существует в контактах!`);\n    }\n  };\n\n  const inputChange = e => {\n    const { value } = e.currentTarget;\n    setFilter(value);\n    }\n  \n  useEffect(() => {\n    localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n  \n  const filterContacts = name => {\n   return contacts.filter(e => e.name.toLowerCase().includes(name.toLowerCase()) );\n    \n  };\n\n  const deleteContact = id => {\n    setContacts(prevState => (prevState.filter(contact => contact.id !== id)));\n  };\n  return (\n      <div className=\"App\">\n        <Section title=\"Телефонная книга\">\n          <Form onSubmit={formSabmitData}/>\n        </Section>\n        <Section title=\"Контакты\">\n          <Filter filter={filter} inputChange={inputChange}/>\n          <ContactList contacts={filterContacts(filter)} onDeleteContact={deleteContact}/>\n        </Section>\n      </div>\n    );\n};\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}